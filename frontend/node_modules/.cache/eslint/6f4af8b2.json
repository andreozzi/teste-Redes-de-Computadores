[{"C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\main.js":"1","C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\App.vue":"2","C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\view\\Home.vue":"3","C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\components\\ErrorMessage.vue":"4","C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\components\\UserCard.vue":"5"},{"size":114,"mtime":1730508465715,"results":"6","hashOfConfig":"7"},{"size":423,"mtime":1730513295425,"results":"8","hashOfConfig":"7"},{"size":2952,"mtime":1730510560147,"results":"9","hashOfConfig":"7"},{"size":279,"mtime":1730510443585,"results":"10","hashOfConfig":"7"},{"size":935,"mtime":1730510405651,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"r0877a",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\main.js",[],[],"C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\App.vue",[],"C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\view\\Home.vue",["24"],"<!-- src/views/Home.vue -->\r\n<template>\r\n    <div class=\"max-w-3xl mx-auto py-8\">\r\n      <h1 class=\"text-3xl font-bold mb-4 text-center\">GitHub Favorite Users</h1>\r\n  \r\n      <!-- Entrada e botão de adicionar usuário -->\r\n      <div class=\"flex mb-4\">\r\n        <input\r\n          v-model=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Enter GitHub username\"\r\n          class=\"flex-1 border border-gray-300 rounded-lg p-2 focus:outline-none\"\r\n        />\r\n        <button\r\n          @click=\"addUser\"\r\n          class=\"ml-2 bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600\"\r\n        >\r\n          Add\r\n        </button>\r\n        <button\r\n          @click=\"sortUsers\"\r\n          class=\"ml-2 bg-gray-500 text-white py-2 px-4 rounded-lg hover:bg-gray-600\"\r\n        >\r\n          Sort A-Z\r\n        </button>\r\n      </div>\r\n  \r\n      <!-- Componente de mensagem de erro -->\r\n      <ErrorMessage :message=\"errorMessage\" />\r\n  \r\n      <!-- Grid de usuários favoritos -->\r\n      <div class=\"grid gap-4 md:grid-cols-2\">\r\n        <UserCard\r\n          v-for=\"user in users\"\r\n          :key=\"user.id\"\r\n          :user=\"user\"\r\n          :starred=\"user.id === starredUserId\"\r\n          @toggleStar=\"toggleStar(user.id)\"\r\n          @removeUser=\"removeUser(user.id)\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import UserCard from \"@/components/UserCard.vue\";\r\n  import ErrorMessage from \"@/components/ErrorMessage.vue\";\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    components: {\r\n      UserCard,\r\n      ErrorMessage,\r\n    },\r\n    data() {\r\n      return {\r\n        username: \"\",\r\n        users: [],\r\n        starredUserId: null,\r\n        errorMessage: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      async addUser() {\r\n        if (this.users.length >= 5) {\r\n          this.errorMessage = \"You can only add up to 5 users.\";\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await axios.get(`/api/users/${this.username}`);\r\n          const user = response.data;\r\n  \r\n          if (!this.users.find((u) => u.id === user.id)) {\r\n            this.users.push(user);\r\n            this.errorMessage = \"\";\r\n          } else {\r\n            this.errorMessage = \"User already added to favorites.\";\r\n          }\r\n        } catch (error) {\r\n          this.errorMessage = \"GitHub user not found.\";\r\n        }\r\n        this.username = \"\";\r\n      },\r\n      removeUser(userId) {\r\n        this.users = this.users.filter((user) => user.id !== userId);\r\n        if (this.starredUserId === userId) {\r\n          this.starredUserId = null;\r\n        }\r\n      },\r\n      toggleStar(userId) {\r\n        this.starredUserId = this.starredUserId === userId ? null : userId;\r\n      },\r\n      sortUsers() {\r\n        this.users.sort((a, b) => a.name.localeCompare(b.name));\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Aqui pode-se adicionar estilos específicos para esta página */\r\n  </style>","C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\components\\ErrorMessage.vue",[],"C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\components\\UserCard.vue",[],{"ruleId":"25","severity":2,"message":"26","line":1,"column":1,"nodeType":null,"messageId":"27"},"vue/multi-word-component-names","Component name \"Home\" should always be multi-word.","unexpected"]