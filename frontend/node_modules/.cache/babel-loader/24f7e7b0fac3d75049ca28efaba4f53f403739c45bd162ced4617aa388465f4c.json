{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"max-w-3xl mx-auto py-8\"\n};\nconst _hoisted_2 = {\n  class: \"flex mb-4\"\n};\nconst _hoisted_3 = {\n  class: \"grid gap-4 md:grid-cols-2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ErrorMessage = _resolveComponent(\"ErrorMessage\");\n  const _component_UserCard = _resolveComponent(\"UserCard\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", {\n    class: \"text-3xl font-bold mb-4 text-center\"\n  }, \"GitHub Favorite Users\", -1 /* HOISTED */)), _createCommentVNode(\" Entrada e botão de adicionar usuário \"), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    type: \"text\",\n    placeholder: \"Enter GitHub username\",\n    class: \"flex-1 border border-gray-300 rounded-lg p-2 focus:outline-none\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addUser && $options.addUser(...args)),\n    class: \"ml-2 bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600\"\n  }, \" Add \"), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.sortUsers && $options.sortUsers(...args)),\n    class: \"ml-2 bg-gray-500 text-white py-2 px-4 rounded-lg hover:bg-gray-600\"\n  }, \" Sort A-Z \")]), _createCommentVNode(\" Componente de mensagem de erro \"), _createVNode(_component_ErrorMessage, {\n    message: $data.errorMessage\n  }, null, 8 /* PROPS */, [\"message\"]), _createCommentVNode(\" Grid de usuários favoritos \"), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createBlock(_component_UserCard, {\n      key: user.id,\n      user: user,\n      starred: user.id === $data.starredUserId,\n      onToggleStar: $event => $options.toggleStar(user.id),\n      onRemoveUser: $event => $options.removeUser(user.id)\n    }, null, 8 /* PROPS */, [\"user\", \"starred\", \"onToggleStar\", \"onRemoveUser\"]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createCommentVNode","_hoisted_2","_cache","$event","$data","username","type","placeholder","onClick","args","$options","addUser","sortUsers","_createVNode","_component_ErrorMessage","message","errorMessage","_hoisted_3","_Fragment","_renderList","users","user","_createBlock","_component_UserCard","key","id","starred","starredUserId","onToggleStar","toggleStar","onRemoveUser","removeUser"],"sources":["C:\\Users\\Victor Andreozzi\\OneDrive\\Desktop\\FACULDADE\\puma-code-challenge\\frontend\\src\\view\\Home.vue"],"sourcesContent":["<!-- src/views/Home.vue -->\r\n<template>\r\n    <div class=\"max-w-3xl mx-auto py-8\">\r\n      <h1 class=\"text-3xl font-bold mb-4 text-center\">GitHub Favorite Users</h1>\r\n  \r\n      <!-- Entrada e botão de adicionar usuário -->\r\n      <div class=\"flex mb-4\">\r\n        <input\r\n          v-model=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Enter GitHub username\"\r\n          class=\"flex-1 border border-gray-300 rounded-lg p-2 focus:outline-none\"\r\n        />\r\n        <button\r\n          @click=\"addUser\"\r\n          class=\"ml-2 bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600\"\r\n        >\r\n          Add\r\n        </button>\r\n        <button\r\n          @click=\"sortUsers\"\r\n          class=\"ml-2 bg-gray-500 text-white py-2 px-4 rounded-lg hover:bg-gray-600\"\r\n        >\r\n          Sort A-Z\r\n        </button>\r\n      </div>\r\n  \r\n      <!-- Componente de mensagem de erro -->\r\n      <ErrorMessage :message=\"errorMessage\" />\r\n  \r\n      <!-- Grid de usuários favoritos -->\r\n      <div class=\"grid gap-4 md:grid-cols-2\">\r\n        <UserCard\r\n          v-for=\"user in users\"\r\n          :key=\"user.id\"\r\n          :user=\"user\"\r\n          :starred=\"user.id === starredUserId\"\r\n          @toggleStar=\"toggleStar(user.id)\"\r\n          @removeUser=\"removeUser(user.id)\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import UserCard from \"@/components/UserCard.vue\";\r\n  import ErrorMessage from \"@/components/ErrorMessage.vue\";\r\n  import axios from \"axios\";\r\n  \r\n  export default {\r\n    components: {\r\n      UserCard,\r\n      ErrorMessage,\r\n    },\r\n    data() {\r\n      return {\r\n        username: \"\",\r\n        users: [],\r\n        starredUserId: null,\r\n        errorMessage: \"\",\r\n      };\r\n    },\r\n    methods: {\r\n      async addUser() {\r\n        if (this.users.length >= 5) {\r\n          this.errorMessage = \"You can only add up to 5 users.\";\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = await axios.get(`/api/users/${this.username}`);\r\n          const user = response.data;\r\n  \r\n          if (!this.users.find((u) => u.id === user.id)) {\r\n            this.users.push(user);\r\n            this.errorMessage = \"\";\r\n          } else {\r\n            this.errorMessage = \"User already added to favorites.\";\r\n          }\r\n        } catch (error) {\r\n          this.errorMessage = \"GitHub user not found.\";\r\n        }\r\n        this.username = \"\";\r\n      },\r\n      removeUser(userId) {\r\n        this.users = this.users.filter((user) => user.id !== userId);\r\n        if (this.starredUserId === userId) {\r\n          this.starredUserId = null;\r\n        }\r\n      },\r\n      toggleStar(userId) {\r\n        this.starredUserId = this.starredUserId === userId ? null : userId;\r\n      },\r\n      sortUsers() {\r\n        this.users.sort((a, b) => a.name.localeCompare(b.name));\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  /* Aqui pode-se adicionar estilos específicos para esta página */\r\n  </style>"],"mappings":";;EAESA,KAAK,EAAC;AAAwB;;EAI5BA,KAAK,EAAC;AAAW;;EAyBjBA,KAAK,EAAC;AAA2B;;;;uBA7BxCC,mBAAA,CAuCM,OAvCNC,UAuCM,G,0BAtCJC,mBAAA,CAA0E;IAAtEH,KAAK,EAAC;EAAqC,GAAC,uBAAqB,sBAErEI,mBAAA,0CAA6C,EAC7CD,mBAAA,CAmBM,OAnBNE,UAmBM,G,gBAlBJF,mBAAA,CAKE;IAZV,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAQmBC,KAAA,CAAAC,QAAQ,GAAAF,MAAA;IACjBG,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,uBAAuB;IACnCX,KAAK,EAAC;iDAHGQ,KAAA,CAAAC,QAAQ,E,GAKnBN,mBAAA,CAKS;IAJNS,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;IACfb,KAAK,EAAC;KACP,OAED,GACAG,mBAAA,CAKS;IAJNS,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAE,SAAA,IAAAF,QAAA,CAAAE,SAAA,IAAAH,IAAA,CAAS;IACjBb,KAAK,EAAC;KACP,YAED,E,GAGFI,mBAAA,oCAAuC,EACvCa,YAAA,CAAwCC,uBAAA;IAAzBC,OAAO,EAAEX,KAAA,CAAAY;EAAY,sCAEpChB,mBAAA,gCAAmC,EACnCD,mBAAA,CASM,OATNkB,UASM,I,kBARJpB,mBAAA,CAOEqB,SAAA,QAvCVC,WAAA,CAiCyBf,KAAA,CAAAgB,KAAK,EAAbC,IAAI;yBADbC,YAAA,CAOEC,mBAAA;MALCC,GAAG,EAAEH,IAAI,CAACI,EAAE;MACZJ,IAAI,EAAEA,IAAI;MACVK,OAAO,EAAEL,IAAI,CAACI,EAAE,KAAKrB,KAAA,CAAAuB,aAAa;MAClCC,YAAU,EAAAzB,MAAA,IAAEO,QAAA,CAAAmB,UAAU,CAACR,IAAI,CAACI,EAAE;MAC9BK,YAAU,EAAA3B,MAAA,IAAEO,QAAA,CAAAqB,UAAU,CAACV,IAAI,CAACI,EAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}